console.log('number' + 3 + 3) //number33 -- тут відбулася конкатенація

console.log(null + 3) //3 -- тому що null конвертнулося у число і стало 0, а 0+3=3

console.log(5 && "qwerty") //qwerty -- 5!=0, тому тру, а рядок це завжди тру. оскільки оператор, якщо всі значення тру повертає останнє, то маємо qwerty

console.log(+'40' + +'2' + "hillel") //42hillel -- спочатку програма перетворила 40 і 2 в намбери і склала їх (бо оператор + перед об'єктом намагається перетворити його в намбер), а потім побачила рядок і тут вже працює конкатенація.

console.log('10' - 5 === 6) //false -- 10 перетворилося в намбер, потім віднялося 5, а оскільки 5!=6, то виводиться фолз

console.log(true + false) //1 -- тут по суті операція з булеаном, тобто 1+0=1

console.log('4px' - 3) //nan -- оскільки 4рх не може бути однозначно конвертовано в число, то маємо nan. а подібні операції з nan повертають nan

console.log('4' - 3) //1 -- тут маємо 4-3=1

console.log('6' + 3 ** 0) //63 -- 3 в 0 ступені = 1, а якщо є стрінга, то оператор + дає конкатенацію і не переводить стінгу в намбер

console.log(12 / '6') //2 -- оператор ділення перевір стрінгу в намбер і потім поділив 12 на 6

console.log('10' + (5 === 6)) //10false -- першим робимо вираз в () і отримуємо фолз, бо 5!=6. далі маємо конк..., бо стрінга

console.log(null == '') //false -- оператор == порівнює тип і значення об'єктів. нулл це обджект, а '' це стрінга. обджект!=стрінга

console.log(3 ** (9 / 3)) //27 -- спочатку в (), маємо 3. а 3 в ступені 3 = 27

console.log(!!'false' == !!'true') //true -- оператор !! використовується для конвертації операнду до його булевого значення, а не пуста стінга завжди тру. тому по суті маємо тру==тру, що повертає тру

console.log(0 || '0' && 1) //1 -- або повертає тру, якщо хоча б один операнд тру (не пуста стрінга завжди тру), далі маємо оператор і. тут якщо маємо всі тру, то виводиться останнє значення, що є 1

console.log((+null == false) < 1) //false -- + конвертує налл в намбер, маємо 0, що = 0 (бо фолз конвертується до 0 при порівнянні з намберами), далі та сама історія, але з тру. маємо 1<1, що є фолз

console.log(false && true || true) //true -- фолз і тру вертає фолз, а фолз або тру вертає тру

console.log(false && (false || true)) //false -- фолз або тру вертає тру, а фолз і тру вертає фолз

console.log((+null == false) < 1 ** 5) //false -- спочатку в (), маємо після конвертацій 0==0, що є тру, далі 1**5=1, тру конертується теж в намбер і маємо 1<1, що є фолз